dist: trusty
language: cpp

cache:
  directories:
    - $HOME/.ccache
    - $HOME/Library/Caches/Homebrew

services:
  - docker

compiler:
  - clang
  - gcc

os: linux

stages:
  - test # Default stage with job matrix
  - osx
  - deploy

env:
  global:
    - TRAVIS_CMAKE_GENERATOR="Ninja"
    - DEPS_BRANCH="master"
  matrix:
    - TRAVIS_BUILD_TYPE="Release" UBUNTU="xenial"
    - TRAVIS_BUILD_TYPE="Debug" UBUNTU="xenial"
    - TRAVIS_BUILD_TYPE="Release" UBUNTU="bionic"
    - TRAVIS_BUILD_TYPE="Debug" UBUNTU="bionic"

# ===================
# STAGE: test (linux)
# ===================

# This step is shared with osx stage
before_install: &before_install
  - if [ "$TRAVIS_BRANCH" != "master" ] ; then export DEPS_BRANCH="devel" ; fi
  - if echo $TRAVIS_COMMIT_MESSAGE | grep -F -q "[ci master]" ; then export DEPS_BRANCH="master" ; fi
  - if echo $TRAVIS_COMMIT_MESSAGE | grep -F -q "[master ci]" ; then export DEPS_BRANCH="master" ; fi

before_script:
  - echo "Using $DEPS_BRANCH for dependencies"
  - >-
    if [ "$UBUNTU" = "xenial" ] ; then
      export DOCKER_IMAGE_NAME=robotology/robotology-tdd:gazebo8${DEPS_BRANCH}
    elif [ "$UBUNTU" = "bionic" ] ; then
      export DOCKER_IMAGE_NAME=robotology/robotology-tdd:gazebo9${DEPS_BRANCH}
    else
      travis_terminate 1
    fi
  - docker pull $DOCKER_IMAGE_NAME

script:
  - >-
    docker run -it \
      -v $TRAVIS_BUILD_DIR:$TRAVIS_BUILD_DIR \
      -v $HOME/.ccache:$HOME/.ccache \
      -w $TRAVIS_BUILD_DIR \
      --env-file .ci/env-file \
      $DOCKER_IMAGE_NAME \
      sh .ci/script.sh

# ==========
# STAGE: osx
# ==========

stage_osx:    
  install: &osx_install
    # Install ccache
    - brew install ccache
    - export PATH="/usr/local/opt/ccache/libexec:$PATH"
    # Setup the dependencies folder
    - export DEPS_CACHE=$HOME/deps
    - export PATH=$PATH:$DEPS_CACHE/bin
    #- export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$DEPS_CACHE/lib
    - export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$DEPS_CACHE
    # Install dependencies
    - brew tap robotology/formulae
    - brew install eigen dartsim/dart/ipopt qt
    - export PATH="/usr/local/opt/qt/bin/:$PATH"
    # Build other dependencies
    - cd $TRAVIS_BUILD_DIR/.ci
    - ./build_deps.sh || travis_terminate 1
    # Install dependencies
    #- brew install eigen ace tinyxml gsl
    #- cd $TRAVIS_BUILD_DIR/.ci
    #- ./install_deps.sh || travis_terminate 1
  script: &osx_script
    - cd $TRAVIS_BUILD_DIR/.ci
    - ./script.sh

# =============
# STAGE: deploy
# =============

#stage_deploy:
  ##install: &deploy_install
    ##- pip3 install --user Pygments mkdocs mkdocs-material
    ##- export PATH=$HOME/.local/bin:$PATH
  #script: &deploy_script
    ## Setup the dependencies cache
    ##- export DEPS_CACHE=$HOME/cache/$TRAVIS_OS_NAME/$TRAVIS_BUILD_TYPE
    ##- export PATH=$PATH:$DEPS_CACHE/bin
    ##- export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:$DEPS_CACHE/lib
    ##- export CMAKE_PREFIX_PATH=$CMAKE_PREFIX_PATH:$DEPS_CACHE
    ## Clone the gh-pages branch
    #- GH_PAGES_ROOTDIR=$HOME/gh-pages
    #- export GH_REPO_ORG=${TRAVIS_REPO_SLUG%*/*}
    #- export GH_REPO_NAME=${TRAVIS_REPO_SLUG#*/*}
    #- export GH_REPO_REF="github.com/$GH_REPO_ORG/$GH_REPO_NAME.git"
    ## Select the deploy folder
    #- DEPLOY_FOLDER=$GH_PAGES_ROOTDIR
    ##- if [ "$TRAVIS_BRANCH" = "master" ] ; then DEPLOY_FOLDER=$GH_PAGES_ROOTDIR ; fi
    ##- if [ "$TRAVIS_BRANCH" = "devel" ] ; then DEPLOY_FOLDER=$GH_PAGES_ROOTDIR/devel ; fi
    ## Check if the gh-pages branch exists and clone it
    #- cd $TRAVIS_BUILD_DIR
    #- git ls-remote --heads --exit-code https://$GH_REPO_REF gh-pages || travis_terminate 1
    #- git clone -b gh-pages https://$GH_REPO_REF $GH_PAGES_ROOTDIR
    ## Push only the current branch
    #- cd $GH_PAGES_ROOTDIR
    #- git config push.default simple
    ## Disable GitHub jekyll generation
    ##- touch $GH_PAGES_ROOTDIR/.nojekyll
    ## Generate documentation
    #- cd $TRAVIS_BUILD_DIR
    #- mkdir build
    #- cd build
    #- cmake .. -DWBT_BUILD_DOCS:BOOL=TRUE
    #- make dox || travis_terminate 1
    #- make mkdocs || travis_terminate 1
    ## Move the new doxygen documentation to the deploy folder
    #- rm -rf $DEPLOY_FOLDER/doxygen
    #- mv $DOXYGEN_INPUT_FOLDER/html $DEPLOY_FOLDER/doxygen
    ## Move the new mkdocs documentation to the deploy folder
    ##- rm -rf $DEPLOY_FOLDER/mkdocs
    ##- mv $MKDOCS_INPUT_FOLDER $DEPLOY_FOLDER/mkdocs
    ## Deploy the folder
    #- cd $GH_PAGES_ROOTDIR
    #- git remote add origin-botlogin https://$GIT_COMMITTER_USERNAME:$DEPLOY_TOKEN@$GH_REPO_REF
    #- git add --all
    #- COMMIT_AUTHOR="$(git --no-pager show -s --format='%an <%ae>' $TRAVIS_COMMIT)"
    #- >-
      #git commit -m "Automatic docs deployment Travis#${TRAVIS_BUILD_NUMBER}" \
                 #-m "Commit: https://github.com/$TRAVIS_REPO_SLUG/commit/$TRAVIS_COMMIT" \
                 #--author "$COMMIT_AUTHOR"
    #- git push --force origin-botlogin gh-pages

# ======================
# BUILD JOBS FROM STAGES
# ======================

jobs:
  include:
    # ---------
    # STAGE OSX
    # ---------
    - &osx_template
      stage: osx
      os: osx
      osx_image: xcode9.3
      before_install: *before_install
      install: *osx_install
      before_script: skip
      script: *osx_script
      after_failure: skip
      after_success: skip
      after_script: skip
      env:
        TRAVIS_CMAKE_GENERATOR="Xcode"
        TRAVIS_BUILD_TYPE="Debug"
    - <<: *osx_template
      compiler: clang
      env:
        TRAVIS_CMAKE_GENERATOR="Unix Makefiles"
        TRAVIS_BUILD_TYPE="Debug"
    # ------------
    # STAGE DEPLOY
    # ------------
    #- &deploy_template
      #stage: deploy
      #compiler:
      #cache:
      #if: fork = false AND branch = "master" AND type != pull_request
      #before_install: skip
      ##install: *deploy_install
      #install: skip
      #before_script: skip
      #script: *deploy_script
      #after_failure: skip
      #after_success: skip
      #after_script: skip
      #env:
        #GIT_COMMITTER_USERNAME=LOC2Bot
        #GIT_COMMITTER_NAME=LOC2Bot
        #GIT_COMMITTER_EMAIL=locomotion.control@gmail.com
        #DOXYGEN_INPUT_FOLDER=$TRAVIS_BUILD_DIR/build/doc/doxygen
        #MKDOCS_INPUT_FOLDER=$TRAVIS_BUILD_DIR/build/doc/mkdocs
      #addons:
        #apt:
          #packages:
            #- doxygen
            #- doxygen-doc
            #- doxygen-gui
            #- graphviz
            #- python3-pip
    #- <<: *deploy_template
      #if: fork = false AND branch = "devel" AND type != pull_request

# notifications:
#  email:
#    - whowantstobemantainedr@email.com
